def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    lintOptions {
        disable 'InvalidPackage'
    }
//    compileSdkVersion rootProject.ext.compileSdkVersion
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.estraightway.estraightwayapp"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 21
//        targetSdkVersion rootProject.ext.targetSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode 12
        versionName "1.0.0"
        multiDexEnabled true
    }



    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

//    signingConfigs {
////        debug {
////            keyAlias keystoreProperties['keyAlias']
////            keyPassword keystoreProperties['keyPassword']
////            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
////            storePassword keystoreProperties['storePassword']
////        }
////        release {
////            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
////
////            // Use below while doing build Locally
////            // Do not Un-comment these below lines and checkin in repo
////
////            keyAlias keystoreProperties['keyAlias']
////            keyPassword keystoreProperties['keyPassword']
////            storePassword keystoreProperties['storePassword']
////
////            // Use below while doing build using CI/CD pipeline
////            // Do not comment these below lines and checkin in repo
//////            keyAlias System.getenv("KEY_ALIAS")
//////            keyPassword System.getenv("keyPassword")
//////            storePassword System.getenv("storePassword")
////        }
//    }
//    buildTypes {
//        debug {
//            signingConfig signingConfigs.debug
//        }
//        release {
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//        }
//    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:1.0.3'
    implementation platform('com.google.firebase:firebase-bom:31.0.0')
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-inappmessaging-display'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation 'com.google.android.gms:play-services-auth:20.3.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:18.0.1'
    implementation 'com.google.firebase:firebase-messaging:23.1.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation "androidx.browser:browser:1.4.0"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader('UTF-8') { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}
//
//def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
//if (flutterVersionCode == null) {
//    flutterVersionCode = '1'
//}
//
//def flutterVersionName = localProperties.getProperty('flutter.versionName')
//if (flutterVersionName == null) {
//    flutterVersionName = '1.0'
//}
//
//apply plugin: 'com.android.application'
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'kotlin-android'
//apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
//
//def keystoreProperties = new Properties()
//def keystorePropertiesFile = rootProject.file('key.properties')
//if (keystorePropertiesFile.exists()) {
//    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//}
//
//android {
//    compileSdkVersion 33
//    ndkVersion flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//
//    kotlinOptions {
//        jvmTarget = '1.8'
//    }
//
//    sourceSets {
//        main.java.srcDirs += 'src/main/kotlin'
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId "com.estraightway.estraightwayapp"
//        // You can update the following values to match your application needs.
//        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
//        minSdkVersion 21
//        targetSdkVersion flutter.targetSdkVersion
//        versionCode flutterVersionCode.toInteger()
//        versionName flutterVersionName
//        multiDexEnabled true
//    }
//
//    signingConfigs {
//        debug {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//            storePassword keystoreProperties['storePassword']
//        }
//        release {
//            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//
//            // Use below while doing build Locally
//            // Do not Un-comment these below lines and checkin in repo
//
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storePassword keystoreProperties['storePassword']
//
//            // Use below while doing build using CI/CD pipeline
//            // Do not comment these below lines and checkin in repo
////            keyAlias System.getenv("KEY_ALIAS")
////            keyPassword System.getenv("keyPassword")
////            storePassword System.getenv("storePassword")
//        }
//    }
//    buildTypes {
//        debug {
//            signingConfig signingConfigs.debug
//        }
//        release {
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//        }
//    }
//}
//
//flutter {
//    source '../..'
//}
//
//dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation 'com.android.support:multidex:1.0.3'
//    implementation platform('com.google.firebase:firebase-bom:31.0.0')
//    implementation 'com.google.firebase:firebase-auth'
//    implementation 'com.google.firebase:firebase-inappmessaging-display'
//    implementation 'com.google.firebase:firebase-analytics'
//    implementation 'com.google.firebase:firebase-core:21.1.1'
//    implementation 'com.google.android.gms:play-services-auth:20.3.0'
//    implementation 'com.google.android.gms:play-services-auth-api-phone:18.0.1'
//    implementation 'com.google.firebase:firebase-messaging:23.1.0'
//    implementation 'com.android.support:support-v4:28.0.0'
//    implementation "androidx.browser:browser:1.4.0"
//}